import 'dart:convert';
import 'dart:developer';
import 'dart:io';

import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';

class FilePickerDemo extends StatefulWidget {
  const FilePickerDemo({Key? key}) : super(key: key);

  @override
  State<FilePickerDemo> createState() => _FilePickerDemoState();
}

class _FilePickerDemoState extends State<FilePickerDemo> {
  int selectFile = 0;
  FilePickerResult? result;
  File? files;
  List pickedFile = [];

  pickedFileFunction() async {
    result = await FilePicker.platform.pickFiles(type: FileType.image);
    if (result != null) {
      File file = File(result!.files.single.path!);
      pickedFile.removeAt(selectFile);
      pickedFile.insert(selectFile, file);
      log('FILES :- $file');
      log('SELECTED FILES :- $pickedFile');
      setState(() {});
    } else {
      log('Something went wrong');
    }
  }

  List images1 = [];
  // getPath() async {
  //   final manifestJson =
  //       await DefaultAssetBundle.of(context).loadString('AssetManifest.json');
  //   final images = json
  //       .decode(manifestJson)
  //       .keys
  //       .where((String key) => key.startsWith('assets/foot/'));
  //   images
  //       .toString()
  //       .replaceFirst('(', '')
  //       .replaceAll(')', '')
  //       .replaceAll('%20', ' ')
  //       .replaceAll('.webp', ').webp')
  //       .split(',')
  //       .forEach((element) {
  //     images1.add(element);
  //   });
  //   log('ALL IMAGES :- ${images1.length}');
  // }

  initState() {
    pickedFile = [files, files, files, files, files];

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        body: Center(
          child: SingleChildScrollView(
            child: Column(
              children: [
                ElevatedButton(
                    onPressed: () async {
                      // await getPath();
                    },
                    child: Text('LOAD')),
                ListView.builder(
                  shrinkWrap: true,
                  physics: NeverScrollableScrollPhysics(),
                  itemCount: images1.length,
                  itemBuilder: (context, index) {
                    log('IMAGE$index :- ${images1[index]}');
                    return Image.asset(
                        '${images1[index].toString().trim().toString()}');
                  },
                ),
                ListView.builder(
                  physics: NeverScrollableScrollPhysics(),
                  shrinkWrap: true,
                  itemCount: 5,
                  itemBuilder: (context, index) {
                    return Container(
                      margin:
                          EdgeInsets.symmetric(horizontal: 50, vertical: 10),
                      height: 100,
                      width: 200,
                      clipBehavior: Clip.antiAliasWithSaveLayer,
                      decoration: BoxDecoration(
                        border: Border.all(color: Colors.black45),
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                        gradient: LinearGradient(
                          colors: [
                            Colors.grey.shade200,
                            Colors.grey.shade300,
                            Colors.grey.shade400,
                            Colors.grey.shade500,
                            Colors.grey.shade600,
                            Colors.grey.shade700,
                            Colors.grey.shade800,
                          ],
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                        ),
                      ),
                      child: pickedFile[index] != null
                          ? Image.file(
                              pickedFile[index],
                              fit: BoxFit.cover,
                            )
                          : Center(
                              child: Text('${index + 1}'),
                            ),
                    );
                  },
                ),
                SizedBox(
                  height: 100,
                ),
                ElevatedButton(
                  onPressed: () {
                    pickedFileFunction();
                    if (pickedFile[selectFile] != null) {
                      setState(
                        () {
                          selectFile += 1;
                        },
                      );

                      log('SELECTED FILE INDEX :- $selectFile');
                    }
                  },
                  child: Text('Select'),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}
